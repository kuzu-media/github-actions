name: Migrate DB

on:
  workflow_call:
    secrets:
      DATABASE_URL:
        required: true
        description: URL of your database
      database_id:
        required: true
        description: The DO database's id
      DO_TOKEN:
        required: true
        description: The token used to access DO

jobs:
  migrate:
    name: Migrate Database
    runs-on: ubuntu-latest
    steps:
      - name: Add IP address to trusted source (managed database)
        uses: GarreauArthur/manage-digital-ocean-managed-database-trusted-sources-gh-action@main
        with:
          action: "add"
          database_id: ${{secrets.database_id}}
          digitalocean_token: "${{ secrets.DO_TOKEN }}"
      
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@kuzu-media'

      - name: Setup Cache
        #  see: https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#github-actions
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-
      
      - name: Add DB URL
        run: echo "DATABASE_URL=${{secrets.DATABASE_URL}}" > .env
        shell: bash
      
      - name: NPM Install
        run: npm install --force
        shell: bash
      
      - name: NPM DB Update
        run: npm run db:update
        shell: bash

      - name: Remove IP address to trusted source (managed database)
        if: always()
        uses: GarreauArthur/manage-digital-ocean-managed-database-trusted-sources-gh-action@main
        with:
          action: "remove"
          database_id: ${{secrets.database_id}}
          digitalocean_token: ${{secrets.DO_TOKEN}}
